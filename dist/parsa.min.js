!function(r){"use strict";var e={};e.dateFormats={YYYYMMDD:{regex:/([0-9]{4})([0-9]{2})([0-9]{2})/,format:"$1-$2-$3"},YYYYDDMM:{regex:/([0-9]{4})([0-9]{2})([0-9]{2})/,format:"$1-$3-$2"},DDMMYYYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{4})/,format:"$3-$2-$1"},MMDDYYYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{4})/,format:"$3-$1-$2"},MMDDYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{2})/,format:"20$3-$1-$2"},DDMMYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{2})/,format:"20$3-$2-$1"},"MM/DD/YYYY":{regex:/([0-9]{2})\/([0-9]{2})\/([0-9]{4})/,format:"$3-$1-$2"},"DD/MM/YYYY":{regex:/([0-9]{2})\/([0-9]{2})\/([0-9]{4})/,format:"$3-$2-$1"},"YYYY/DD/MM":{regex:/([0-9]{4})\/([0-9]{2})\/([0-9]{2})/,format:"$1-$3-$2"},"DD MM YYYY":{regex:/([0-9]{2})\s([0-9]{2})\s([0-9]{4})/,format:"$3-$2-$1"},"MM DD YYYY":{regex:/([0-9]{2})\s([0-9]{2})\s([0-9]{4})/,format:"$3-$1-$2"},"YYYY MM DD":{regex:/([0-9]{2})\s([0-9]{2})\s([0-9]{4})/,format:"$1-$2-$3"}},e.parseDate=function(r,t){if("string"!=typeof t)throw new Error("Date format needs to be a string.");if(void 0===(t=e.dateFormats[t.toUpperCase()]))throw new Error("Date format is unsupported. Check supported formats.");const o=r.replace(t.regex,t.format),n=Date.parse(o);if(isNaN(n))throw console.log("[ERROR] Date: "+o),new Error("Could not parse date.");return new Date(o)},e.validateIp=function(r){if("string"!=typeof r)throw new Error("IP address not supplied.");return!!/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(r)},e.parseQuery=function(r){if("string"!=typeof r)throw new Error("URL not supplied.");const e={};return r.replace(new RegExp("([^?=&]+)(=([^&]*))?","g"),function(r,t,o,n){n&&(e[t]=n)}),e},e.validateEmail=function(r){if("string"!=typeof r)throw new Error("Email not supplied.");return/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/.test(r)},e.extractNum=function(r){if("string"!=typeof r)throw new Error("String not supplied.");const e=[];return r.replace(new RegExp(/(?:\d*\.)?\d+/,"g"),function(r){e.push(r)}),e},e.extractWords=function(r,e){if("string"!=typeof r)throw new Error("String not supplied.");if(!Array.isArray(e))throw new Error("Words array not supplied.");var t=`(${e.join("|")})`,o=new RegExp(t,"gi");return r.match(o)},"undefined"!=typeof module&&module.exports?module.exports=e:"function"==typeof define&&define.amd?define(function(){return e}):r.parsa=e}(this);