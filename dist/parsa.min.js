!function(r){"use strict";function e(r,e,n,o){if("Do MMMM YYYY"===t.format)return`${o}-${t.longMonth[n].num}-${e.replace(/[A-Za-z]/g,"")}`;if("Do, MMMM, YYYY"===t.format)return`${o}-${t.longMonth[n].num}-${e.replace(/[A-Za-z]/g,"")}`;if("MM MMMM YYYY"===t.format)return`${o}-${t.longMonth[n].num}-${e}`;throw console.log(`[ERROR] Date format: ${formattedDate}`),new Error("Could not parse date.")}var t={};t.dateFormats={YYYYMMDD:{regex:/([0-9]{4})([0-9]{2})([0-9]{2})/,format:"$1-$2-$3"},YYYYDDMM:{regex:/([0-9]{4})([0-9]{2})([0-9]{2})/,format:"$1-$3-$2"},DDMMYYYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{4})/,format:"$3-$2-$1"},MMDDYYYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{4})/,format:"$3-$1-$2"},MMDDYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{2})/,format:"20$3-$1-$2"},DDMMYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{2})/,format:"20$3-$2-$1"},"MM/DD/YYYY":{regex:/([0-9]{2})\/([0-9]{2})\/([0-9]{4})/,format:"$3-$1-$2"},"DD/MM/YYYY":{regex:/([0-9]{2})\/([0-9]{2})\/([0-9]{4})/,format:"$3-$2-$1"},"YYYY/DD/MM":{regex:/([0-9]{4})\/([0-9]{2})\/([0-9]{2})/,format:"$1-$3-$2"},"DD-MM-YYYY":{regex:/([0-9]{2})\-([0-9]{2})\-([0-9]{4})/,format:"$3-$2-$1"},"MM-DD-YYYY":{regex:/([0-9]{2})\-([0-9]{2})\-([0-9]{4})/,format:"$3-$1-$2"},"YYYY-DD-MM":{regex:/([0-9]{4})\-([0-9]{2})\-([0-9]{2})/,format:"$3-$2-$1"},"YYYY-MM-DD":{regex:/([0-9]{4})\-([0-9]{2})\-([0-9]{2})/,format:"$1-$2-$3"},"DD MM YYYY":{regex:/([0-9]{2})\s([0-9]{2})\s([0-9]{4})/,format:"$3-$2-$1"},"MM DD YYYY":{regex:/([0-9]{2})\s([0-9]{2})\s([0-9]{4})/,format:"$3-$1-$2"},"YYYY MM DD":{regex:/([0-9]{4})\s([0-9]{2})\s([0-9]{2})/,format:"$1-$2-$3"},"YYYYMMDD HH:MM":{regex:/([0-9]{4})([0-9]{2})([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$2-$3 $4:$5"},"YYYYDDMM HH:MM":{regex:/([0-9]{4})([0-9]{2})([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$3-$2 $4:$5"},"YYYYMMDD HH:MM:SS":{regex:/([0-9]{4})([0-9]{2})([0-9]{2})\s([0-9]{2}):([0-9]{2}):([0-9]{2})/,format:"$1-$2-$3 $4:$5:$6"},"YYYYDDMM HH:MM:SS":{regex:/([0-9]{4})([0-9]{2})([0-9]{2})\s([0-9]{2}):([0-9]{2}):([0-9]{2})/,format:"$1-$3-$2 $4:$5:$6"},"YYYY-DD-MM HH:MM":{regex:/([0-9]{4})\-([0-9]{2})\-([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$3-$2 $4:$5"},"YYYY-MM-DD HH:MM":{regex:/([0-9]{4})\-([0-9]{2})\-([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$2-$3 $4:$5"},"YYYY/MM/DD HH:MM":{regex:/([0-9]{4})\/([0-9]{2})\/([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$2-$3 $4:$5"},"YYYY/DD/MM HH:MM":{regex:/([0-9]{4})\/([0-9]{2})\/([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$3-$2 $4:$5"},"Do MMMM YYYY":{regex:/([^\s]+)\s([^\s]+)\s([^\s{4}][0-9]+)/,format:e},"Do, MMMM, YYYY":{regex:/([^\s]+),\s([^\s]+),\s([^\s{4}][0-9]+)/,format:e},"MM MMMM YYYY":{regex:/([^\s]+)\s([^\s]+)\s([^\s{4}][0-9]+)/,format:e}},t.longMonth={January:{num:"01"},February:{num:"03"},March:{num:"03"},April:{num:"04"},May:{num:"05"},June:{num:"06"},July:{num:"07"},August:{num:"08"},September:{num:"09"},October:{num:"10"},November:{num:"11"},December:{num:"12"}},t.parseDate=function(r,e){if("string"!=typeof e)throw new Error("Date format needs to be a string.");let n=t.dateFormats[e];if(void 0===n)throw new Error("Date format is unsupported. Check supported formats.");t.format=e;const o=r.replace(n.regex,n.format),f=Date.parse(o);if(isNaN(f))throw console.log(`[ERROR] Date format: ${o}`),new Error("Could not parse date.");return new Date(o)},t.validateIp=function(r){if("string"!=typeof r)throw new Error("IP address not supplied.");return/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(r)},t.validateIpv6=function(r){if("string"!=typeof r)throw new Error("IP address not supplied.");return/(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/.test(r)},t.parseQuery=function(r){if("string"!=typeof r)throw new Error("URL not supplied.");let e={};return r.replace(new RegExp("([^?=&]+)(=([^&]*))?","g"),function(r,t,n,o){o&&(e[t]=o)}),e},t.parseUrl=function(r){if("string"!=typeof r)throw new Error("URL not supplied.");let e={};return r.replace(new RegExp(/^(?:(http[s]?|ftp[s]):\/\/)?([^:\/\s]+)(:[0-9]+)?((?:\/\w+)*\/)([\w\-\.]+[^#?\s]+)([^#\s]*)?(#[\w\-]+)?$/,"g"),function(t,n,o,f,a,s,i,u){e={url:r,protocol:n,host:o,port:f,path:a,file:s,query:i,hash:u}}),e},t.validateUrl=function(r){if("string"!=typeof r)throw new Error("URL not supplied.");return/^(https?|ftp):\/\/[^\s\/$.?#].[^\s]*$/.test(r)},t.validateEmail=function(r){if("string"!=typeof r)throw new Error("Email not supplied.");return/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/.test(r)},t.isBetweenLength=function(r,e,t){if(!r)throw new Error("Value not supplied.");if(!e||"number"!=typeof e)throw new Error("Min Length not supplied.");if(!t||"number"!=typeof t)throw new Error("Max Length not supplied.");return r.length>=e&&r.length<=t},t.maxLength=function(r,e){return!(r&&r.length>=e)},t.minLength=function(r,e){return!!(r&&r.length>=e)},t.isNumeric=function(r){return!0!==/\D/g.test(r)},t.isAlpha=function(r){return!0!==/(?:\d*\.)?\d+/g.test(r)},t.isFunction=function(r){return"function"==typeof r},t.isObject=function(r){return"object"==typeof r},t.isArray=function(r){return Array.isArray(r)},t.isNumber=function(r){return Number.isInteger(r)},t.isString=function(r){return"string"==typeof r},t.extractNum=function(r){if("string"!=typeof r)throw new Error("String not supplied.");const e=[];return r.replace(new RegExp(/(?:\d*\.)?\d+/,"g"),function(r){e.push(r)}),e},t.extractWords=function(r,e){if("string"!=typeof r)throw new Error("String not supplied.");if(!Array.isArray(e))throw new Error("Words array not supplied.");var t=`(${e.join("|")})`,n=new RegExp(t,"gi");return r.match(n)},t.securePassword=function(r){if("string"!=typeof r)throw new Error("Password not supplied.");return/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(r)},t.removeAlpha=function(r){if("string"!=typeof r||""===r)throw new Error("String not supplied.");return r.replace(/\D/g,"")},t.removeNumeric=function(r){if("string"!=typeof r||""===r)throw new Error("String not supplied.");return r.replace(/\d+/g,"")},t.firstUppercase=function(r){if("string"!=typeof r||""===r)throw new Error("String not supplied.");let e="";return r.replace(new RegExp(/(\w+)/,"g"),function(r){let t=r;t&&t.length>0&&(t=t.toUpperCase().substring(0,1)+t.substring(1,t.length)+" "),e+=t}),e.trim()},t.extractPhone=function(r){if("string"!=typeof r)throw new Error("String not supplied.");const e=[];return r.replace(new RegExp(/\+?\d{1,4}?[-.\s]?\(?\d{1,3}?\)?[-.\s]?\d{1,4}[-.\s]?\d{1,4}[-.\s]?\d{1,9}/,"g"),function(r){e.push(r)}),e},"undefined"!=typeof module&&module.exports?module.exports=t:"function"==typeof define&&define.amd?define(function(){return t}):r.parsa=t}(this);