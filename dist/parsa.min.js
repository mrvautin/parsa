!function(e){"use strict";function r(e,r,n,s){if("Do MMMM YYYY"===t.format)return`${s}-${t.longMonth[n].num}-${r.replace(/[A-Za-z]/g,"")}`;if("Do, MMMM, YYYY"===t.format)return`${s}-${t.longMonth[n].num}-${r.replace(/[A-Za-z]/g,"")}`;if("MM MMMM YYYY"===t.format)return`${s}-${t.longMonth[n].num}-${r}`;throw console.log(`[ERROR] Date format: ${formattedDate}`),new Error("Could not parse date.")}var t={};t.dateFormats={YYYYMMDD:{regex:/([0-9]{4})([0-9]{2})([0-9]{2})/,format:"$1-$2-$3"},YYYYDDMM:{regex:/([0-9]{4})([0-9]{2})([0-9]{2})/,format:"$1-$3-$2"},DDMMYYYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{4})/,format:"$3-$2-$1"},MMDDYYYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{4})/,format:"$3-$1-$2"},MMDDYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{2})/,format:"20$3-$1-$2"},DDMMYY:{regex:/([0-9]{2})([0-9]{2})([0-9]{2})/,format:"20$3-$2-$1"},"MM/DD/YYYY":{regex:/([0-9]{2})\/([0-9]{2})\/([0-9]{4})/,format:"$3-$1-$2"},"DD/MM/YYYY":{regex:/([0-9]{2})\/([0-9]{2})\/([0-9]{4})/,format:"$3-$2-$1"},"YYYY/DD/MM":{regex:/([0-9]{4})\/([0-9]{2})\/([0-9]{2})/,format:"$1-$3-$2"},"DD-MM-YYYY":{regex:/([0-9]{2})\-([0-9]{2})\-([0-9]{4})/,format:"$3-$2-$1"},"MM-DD-YYYY":{regex:/([0-9]{2})\-([0-9]{2})\-([0-9]{4})/,format:"$3-$1-$2"},"YYYY-DD-MM":{regex:/([0-9]{4})\-([0-9]{2})\-([0-9]{2})/,format:"$3-$2-$1"},"YYYY-MM-DD":{regex:/([0-9]{4})\-([0-9]{2})\-([0-9]{2})/,format:"$1-$2-$3"},"DD MM YYYY":{regex:/([0-9]{2})\s([0-9]{2})\s([0-9]{4})/,format:"$3-$2-$1"},"MM DD YYYY":{regex:/([0-9]{2})\s([0-9]{2})\s([0-9]{4})/,format:"$3-$1-$2"},"YYYY MM DD":{regex:/([0-9]{4})\s([0-9]{2})\s([0-9]{2})/,format:"$1-$2-$3"},"YYYYMMDD HH:MM":{regex:/([0-9]{4})([0-9]{2})([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$2-$3 $4:$5"},"YYYYDDMM HH:MM":{regex:/([0-9]{4})([0-9]{2})([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$3-$2 $4:$5"},"YYYYMMDD HH:MM:SS":{regex:/([0-9]{4})([0-9]{2})([0-9]{2})\s([0-9]{2}):([0-9]{2}):([0-9]{2})/,format:"$1-$2-$3 $4:$5:$6"},"YYYYDDMM HH:MM:SS":{regex:/([0-9]{4})([0-9]{2})([0-9]{2})\s([0-9]{2}):([0-9]{2}):([0-9]{2})/,format:"$1-$3-$2 $4:$5:$6"},"YYYY-DD-MM HH:MM":{regex:/([0-9]{4})\-([0-9]{2})\-([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$3-$2 $4:$5"},"YYYY-MM-DD HH:MM":{regex:/([0-9]{4})\-([0-9]{2})\-([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$2-$3 $4:$5"},"YYYY/MM/DD HH:MM":{regex:/([0-9]{4})\/([0-9]{2})\/([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$2-$3 $4:$5"},"YYYY/DD/MM HH:MM":{regex:/([0-9]{4})\/([0-9]{2})\/([0-9]{2})\s([0-9]{2}):([0-9]{2})/,format:"$1-$3-$2 $4:$5"},"Do MMMM YYYY":{regex:/([^\s]+)\s([^\s]+)\s([^\s{4}][0-9]+)/,format:r},"Do, MMMM, YYYY":{regex:/([^\s]+),\s([^\s]+),\s([^\s{4}][0-9]+)/,format:r},"MM MMMM YYYY":{regex:/([^\s]+)\s([^\s]+)\s([^\s{4}][0-9]+)/,format:r}},t.validationSchema=["isAlpha","isNumeric","isString","minLength","maxLength","isBetweenLength","isObject","isArray","isRequired","securePassword"],t.longMonth={January:{num:"01"},February:{num:"03"},March:{num:"03"},April:{num:"04"},May:{num:"05"},June:{num:"06"},July:{num:"07"},August:{num:"08"},September:{num:"09"},October:{num:"10"},November:{num:"11"},December:{num:"12"}},t.parseDate=function(e,r){if("string"!=typeof r)throw new Error("Date format needs to be a string.");let n=t.dateFormats[r];if(void 0===n)throw new Error("Date format is unsupported. Check supported formats.");t.format=r;const s=e.replace(n.regex,n.format),o=Date.parse(s);if(isNaN(o))throw console.log(`[ERROR] Date format: ${s}`),new Error("Could not parse date.");return new Date(s)},t.validateIp=function(e){if("string"!=typeof e)throw new Error("IP address not supplied.");return/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(e)},t.validateIpv6=function(e){if("string"!=typeof e)throw new Error("IP address not supplied.");return/(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))/.test(e)},t.parseQuery=function(e){if("string"!=typeof e)throw new Error("URL not supplied.");let r={};return e.replace(new RegExp("([^?=&]+)(=([^&]*))?","g"),function(e,t,n,s){s&&(r[t]=s)}),r},t.parseUrl=function(e){if("string"!=typeof e)throw new Error("URL not supplied.");let r={};return e.replace(new RegExp(/^(?:(http[s]?|ftp[s]):\/\/)?([^:\/\s]+)(:[0-9]+)?((?:\/\w+)*\/)([\w\-\.]+[^#?\s]+)([^#\s]*)?(#[\w\-]+)?$/,"g"),function(t,n,s,o,a,i,u,f){r={url:e,protocol:n,host:s,port:o,path:a,file:i,query:u,hash:f}}),r},t.validateUrl=function(e){if("string"!=typeof e)throw new Error("URL not supplied.");return/^(https?|ftp):\/\/[^\s\/$.?#].[^\s]*$/.test(e)},t.validateEmail=function(e){if("string"!=typeof e)throw new Error("Email not supplied.");return/(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/.test(e)},t.isBetweenLength=function(e,r,t){if(!e)throw new Error("Value not supplied.");if(!r||"number"!=typeof r)throw new Error("Min Length not supplied.");if(!t||"number"!=typeof t)throw new Error("Max Length not supplied.");return e.length>=r&&e.length<=t},t.maxLength=function(e,r){return!(e&&e.length>=r)},t.minLength=function(e,r){return!!(e&&e.length>=r)},t.isNumeric=function(e){return!0!==/\D/g.test(e)},t.isAlpha=function(e){return!0!==/(?:\d*\.)?\d+/g.test(e)},t.isFunction=function(e){return"function"==typeof e},t.isObject=function(e){return"object"==typeof e},t.isArray=function(e){return Array.isArray(e)},t.isNumber=function(e){return Number.isInteger(e)},t.isString=function(e){return"string"==typeof e},t.isDefined=function(e){return void 0!==e},t.validateObject=function(e,r){let n={};return n.errors=[],Object.keys(e).forEach(function(s){let o=e[s];if(o.name)if(void 0!==r[o.name]){if(o.rules){if(!t.isArray(o.rules))return void n.errors.push({property:o,message:"Rules is an array"});o.rules.forEach(function(e){let s=e,a=s.split("|");switch(s.split("|").length>0&&(s=s.split("|")[0]),s){case"isAlpha":t.isAlpha(r[o.name])||n.errors.push({property:o.name,message:"Value is not alpha"});break;case"isNumeric":t.isNumeric(r[o.name])||n.errors.push({property:o.name,message:"Value is not numeric"});break;case"isString":t.isString(r[o.name])||n.errors.push({property:o.name,message:"Value is not a string"});break;case"minLength":if(2!==a.length){n.errors.push({property:s,message:"Rule is missing parameters"});break}t.minLength(r[o.name],a[1])||n.errors.push({property:o.name,message:"Value is not the minimum length"});break;case"maxLength":if(2!==a.length){n.errors.push({property:s,message:"Rule is missing parameters"});break}t.maxLength(r[o.name],a[1])||n.errors.push({property:o.name,message:"Value is greater than the maximum length"});break;case"isBetweenLength":if(3!==a.length){n.errors.push({property:s,message:"Rule is missing parameters"});break}t.isBetweenLength(r[o.name],a[1],a[2])||n.errors.push({property:o.name,message:`Value is not between ${a[1]} and ${a[2]}`});break;case"isObject":t.isObject(r[o.name])||n.errors.push({property:o.name,message:"Value is not an Object"});break;case"isArray":t.isArray(r[o.name])||n.errors.push({property:o.name,message:"Value is not an Array"});break;case"isRequired":""!==r[o.name]&&t.isDefined(r[o.name])||n.errors.push({property:o.name,message:"Value is required"});break;case"securePassword":t.securePassword(r[o.name])&&n.errors.push({property:o.name,message:"Value is not a secure password"})}})}}else n.errors.push(`Property: ${o.name} - not found`);else n.errors.push(`Property: ${o} - doesn't have a name`)}),n.result=0===n.errors.length,n},t.extractNum=function(e){if("string"!=typeof e)throw new Error("String not supplied.");const r=[];return e.replace(new RegExp(/(?:\d*\.)?\d+/,"g"),function(e){r.push(e)}),r},t.extractWords=function(e,r){if("string"!=typeof e)throw new Error("String not supplied.");if(!Array.isArray(r))throw new Error("Words array not supplied.");var t=`(${r.join("|")})`,n=new RegExp(t,"gi");return e.match(n)},t.securePassword=function(e){if("string"!=typeof e)throw new Error("Password not supplied.");return/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/.test(e)},t.removeAlpha=function(e){if("string"!=typeof e||""===e)throw new Error("String not supplied.");return e.replace(/\D/g,"")},t.removeNumeric=function(e){if("string"!=typeof e||""===e)throw new Error("String not supplied.");return e.replace(/\d+/g,"")},t.firstUppercase=function(e){if("string"!=typeof e||""===e)throw new Error("String not supplied.");let r="";return e.replace(new RegExp(/(\w+)/,"g"),function(e){let t=e;t&&t.length>0&&(t=t.toUpperCase().substring(0,1)+t.substring(1,t.length)+" "),r+=t}),r.trim()},t.extractPhone=function(e){if("string"!=typeof e)throw new Error("String not supplied.");const r=[];return e.replace(new RegExp(/\+?\d{1,4}?[-.\s]?\(?\d{1,3}?\)?[-.\s]?\d{1,4}[-.\s]?\d{1,4}[-.\s]?\d{1,9}/,"g"),function(e){r.push(e)}),r},"undefined"!=typeof module&&module.exports?module.exports=t:"function"==typeof define&&define.amd?define(function(){return t}):e.parsa=t}(this);